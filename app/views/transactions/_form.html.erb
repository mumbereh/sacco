<%= form_with(model: transaction) do |form| %>
  <% if transaction.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(transaction.errors.count, "error") %> prohibited this transaction from being saved:</h2>
      <ul>
        <% transaction.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <h2 class="details">Transaction Details</h2>

  <div>
    <%= form.label :member_id, "Member", style: "display: block" %>
    <%= form.collection_select :member_id, Member.all, :id, :name, { prompt: "Select Member" }, class: "form-control", id: "member_select" %>
  </div>

  <div>
    <%= form.label :account_id, "Account ID", style: "display: block" %>
    <%= form.select :account_id, [], { prompt: "Select Member First" }, class: "form-control", id: "account_select", disabled: true %>
  </div>

  <div>
    <%= form.label :transaction_type, "Transaction Type", style: "display: block" %>
    <%= form.select :transaction_type, ["deposit", "withdraw", "transfer"], { prompt: "Select Transaction Type" }, class: "form-control", id: "transaction_type" %>
  </div>

  <div id="recipient_account_field" style="display: none;">
    <%= form.label :recipient_account_id, "Recipient Account", style: "display: block" %>
    <%= form.collection_select :recipient_account_id, [], :id, :account_number, { prompt: "Select Recipient Account" }, class: "form-control", id: "recipient_account_select" %>
  </div>

  <div>
    <%= form.label :amount, "Amount", style: "display: block" %>
    <%= form.number_field :amount, step: 0.01, class: "form-control" %>
  </div>

  <div>
    <%= form.submit "Submit Transaction", class: "btn btn-primary" %>
  </div>
<% end %>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    var transactionType = document.getElementById("transaction_type");
    var recipientField = document.getElementById("recipient_account_field");
    var memberSelect = document.getElementById("member_select");
    var accountSelect = document.getElementById("account_select");
    var recipientSelect = document.getElementById("recipient_account_select");

    transactionType.addEventListener("change", function () {
      if (this.value === "transfer") {
        recipientField.style.display = "block";
      } else {
        recipientField.style.display = "none";
      }
    });

    memberSelect.addEventListener("change", function () {
      var memberId = this.value;
      if (memberId) {
        fetch(`/members/${memberId}/account`)
          .then(response => response.json())
          .then(data => {
            accountSelect.innerHTML = "";
            if (data.account_number) {
              var option = new Option(data.account_number, data.account_id);
              accountSelect.appendChild(option);
              accountSelect.disabled = false;
            } else {
              var defaultOption = new Option("No account found", "");
              accountSelect.appendChild(defaultOption);
              accountSelect.disabled = true;
            }
          })
          .catch(error => console.error("Error fetching account details:", error));
      } else {
        accountSelect.innerHTML = "<option>Select Member First</option>";
        accountSelect.disabled = true;
      }
    });

    function updateRecipientList() {
      var selectedAccountId = accountSelect.value;
      if (!selectedAccountId) return;

      fetch(`/accounts`)
        .then(response => response.json())
        .then(data => {
          recipientSelect.innerHTML = "<option>Select Recipient Account</option>";
          data.forEach(function (account) {
            if (account.id !== parseInt(selectedAccountId)) {
              var option = new Option(account.account_number, account.id);
              recipientSelect.appendChild(option);
            }
          });

          recipientSelect.disabled = recipientSelect.options.length === 1;
        })
        .catch(error => console.error("Error fetching recipient accounts:", error));
    }

    accountSelect.addEventListener("change", function () {
      if (transactionType.value === "transfer") {
        updateRecipientList();
      }
    });
  });
</script>
